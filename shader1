void mainImage( out vec4 fragColor, in vec2 fragCoord )
{
    // Normalized pixel coordinates (from 0 to 1)
    vec2 uv = fragCoord/iResolution.xy;
    
    float pi = 3.14159265359;
    
    float theta = uv.y*pi;
    float phi = uv.x*pi*2.0;

    // Time varying pixel color
    vec3 col = 0.5 + 0.5*cos(vec3(theta,phi/2.0,0));
    vec3 bcol = col;

    // Output to screen
    fragColor = vec4(col,1.0);
    
    //float x = sin(theta)*cos(phi);
    //float y = sin(theta)*sin(phi);
    //float z = cos(theta);
    
    vec2 newuv = fragCoord/iResolution.yy;
    if (newuv.x>1.0) {
        fragColor = vec4(bcol,1.0);
    }
    else {
        newuv *= 2.0;
        newuv -= vec2(1,1);
        if (length(newuv)>1.0 ){
        	fragColor = vec4(bcol,1.0);
        }
        else {               
        	theta = acos(newuv.y);
            //https://blog.csdn.net/zghforever/article/details/88644499
            float c = newuv.x;
            float a = cos(iTime) * sin(theta);
            float b = sin(iTime) * sin(theta);
            if (sin(iTime)>0.0) {
                float t = (b+sqrt(b*b+a*a-c*c))/(a+c);
                phi = 2.0*atan(t);
            }
            else {
                float t = (b-sqrt(b*b+a*a-c*c))/(a+c);
                phi = 2.0*atan(t);
            }
            
    		//phi = asin(newuv.x/sin(theta));
    		col = 0.5 + 0.5*cos(vec3(theta,phi/2.0,0));
    		fragColor = vec4(col,1.0);
        }
    }
}